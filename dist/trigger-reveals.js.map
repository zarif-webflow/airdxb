{
  "version": 3,
  "sources": ["../src/features/trigger-reveals.ts"],
  "sourcesContent": ["const init = () => {\n  const triggerRevealParents = Array.from(\n    document.querySelectorAll<HTMLElement>(\"[data-trigger-reveal-parent]\")\n  );\n\n  if (triggerRevealParents.length === 0) {\n    console.error(\"No trigger reveal parent ([data-trigger-reveal-parent]) was found.\");\n    return;\n  }\n\n  let selectedTrigger: HTMLElement | undefined = undefined;\n  let selectedRevealElement: HTMLElement | undefined = undefined;\n\n  const selectTrigger = (triggerElement: HTMLElement, revealElement: HTMLElement) => {\n    if (selectedTrigger) {\n      selectedTrigger.classList.remove(\"is--active\");\n    }\n    if (selectedRevealElement) {\n      selectedRevealElement.classList.add(\"is--hidden\");\n    }\n\n    triggerElement.classList.add(\"is--active\");\n    revealElement.classList.remove(\"is--hidden\");\n\n    selectedTrigger = triggerElement;\n    selectedRevealElement = revealElement;\n  };\n\n  for (const triggerRevealParent of triggerRevealParents) {\n    const triggers = Array.from(\n      triggerRevealParent.querySelectorAll<HTMLElement>(\"[data-trigger]\")\n    );\n\n    if (triggers.length === 0) {\n      console.error(\n        \"No triggers([data-trigger]) were found in a trigger reveal parent ([data-trigger-reveal-parent]).\"\n      );\n      return;\n    }\n\n    let index = 0;\n\n    for (const trigger of triggers) {\n      index += 1;\n\n      const triggerKey = trigger.dataset.trigger;\n\n      if (!triggerKey) {\n        console.error(\"Invalid trigger key on a reveal trigger!\");\n        continue;\n      }\n\n      const revealElement = triggerRevealParent.querySelector<HTMLElement>(\n        `[data-trigger-value='${triggerKey}']`\n      );\n\n      if (!revealElement) {\n        console.error(`No reveal element is found for [data-trigger=${triggerKey}]`);\n        continue;\n      }\n\n      if (index === 2) {\n        selectTrigger(trigger, revealElement);\n      }\n\n      trigger.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n\n        selectTrigger(trigger, revealElement);\n      });\n    }\n  }\n};\n\ninit();\n"],
  "mappings": ";;;AAAA,IAAM,OAAO,MAAM;AACjB,QAAM,uBAAuB,MAAM;AAAA,IACjC,SAAS,iBAA8B,8BAA8B;AAAA,EACvE;AAEA,MAAI,qBAAqB,WAAW,GAAG;AACrC,YAAQ,MAAM,oEAAoE;AAClF;AAAA,EACF;AAEA,MAAI,kBAA2C;AAC/C,MAAI,wBAAiD;AAErD,QAAM,gBAAgB,CAAC,gBAA6B,kBAA+B;AACjF,QAAI,iBAAiB;AACnB,sBAAgB,UAAU,OAAO,YAAY;AAAA,IAC/C;AACA,QAAI,uBAAuB;AACzB,4BAAsB,UAAU,IAAI,YAAY;AAAA,IAClD;AAEA,mBAAe,UAAU,IAAI,YAAY;AACzC,kBAAc,UAAU,OAAO,YAAY;AAE3C,sBAAkB;AAClB,4BAAwB;AAAA,EAC1B;AAEA,aAAW,uBAAuB,sBAAsB;AACtD,UAAM,WAAW,MAAM;AAAA,MACrB,oBAAoB,iBAA8B,gBAAgB;AAAA,IACpE;AAEA,QAAI,SAAS,WAAW,GAAG;AACzB,cAAQ;AAAA,QACN;AAAA,MACF;AACA;AAAA,IACF;AAEA,QAAI,QAAQ;AAEZ,eAAW,WAAW,UAAU;AAC9B,eAAS;AAET,YAAM,aAAa,QAAQ,QAAQ;AAEnC,UAAI,CAAC,YAAY;AACf,gBAAQ,MAAM,0CAA0C;AACxD;AAAA,MACF;AAEA,YAAM,gBAAgB,oBAAoB;AAAA,QACxC,wBAAwB,UAAU;AAAA,MACpC;AAEA,UAAI,CAAC,eAAe;AAClB,gBAAQ,MAAM,gDAAgD,UAAU,GAAG;AAC3E;AAAA,MACF;AAEA,UAAI,UAAU,GAAG;AACf,sBAAc,SAAS,aAAa;AAAA,MACtC;AAEA,cAAQ,iBAAiB,SAAS,CAAC,MAAM;AACvC,UAAE,eAAe;AAEjB,sBAAc,SAAS,aAAa;AAAA,MACtC,CAAC;AAAA,IACH;AAAA,EACF;AACF;AAEA,KAAK;",
  "names": []
}
