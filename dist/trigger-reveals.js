const d=()=>{const s=Array.from(document.querySelectorAll("[data-trigger-reveal-parent]"));if(s.length===0){console.error("No trigger reveal parent ([data-trigger-reveal-parent]) was found.");return}let a,o;const l=(e,r)=>{a&&a.classList.remove("is--active"),o&&o.classList.add("is--hidden"),e.classList.add("is--active"),r.classList.remove("is--hidden"),a=e,o=r};for(const e of s){const r=Array.from(e.querySelectorAll("[data-trigger]"));if(r.length===0){console.error("No triggers([data-trigger]) were found in a trigger reveal parent ([data-trigger-reveal-parent]).");return}let g=0;for(const t of r){g+=1;const n=t.dataset.trigger;if(!n){console.error("Invalid trigger key on a reveal trigger!");continue}const i=e.querySelector(`[data-trigger-value='${n}']`);if(!i){console.error(`No reveal element is found for [data-trigger=${n}]`);continue}g===2&&l(t,i),t.addEventListener("click",c=>{c.preventDefault(),l(t,i)})}}};d();
