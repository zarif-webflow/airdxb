{
  "version": 3,
  "sources": ["../src/utils/constants.ts", "../src/utils/static-data.ts", "../src/features/line-chart.ts"],
  "sourcesContent": ["export const LINE_CHART_DEFAULT_COLOR = \"#000000\";\n", "export const MonthsArray = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n] as const;\n\ntype Months = (typeof MonthsArray)[number];\n\nexport const data: { month: Months; value: number }[] = [\n  {\n    month: \"Jan\",\n    value: 14,\n  },\n  {\n    month: \"Feb\",\n    value: 12,\n  },\n  {\n    month: \"Mar\",\n    value: 12,\n  },\n  {\n    month: \"Apr\",\n    value: 10,\n  },\n  {\n    month: \"May\",\n    value: 9,\n  },\n  {\n    month: \"Jun\",\n    value: 6.75,\n  },\n  {\n    month: \"Jul\",\n    value: 6.75,\n  },\n  {\n    month: \"Aug\",\n    value: 5.5,\n  },\n  {\n    month: \"Sep\",\n    value: 10,\n  },\n  {\n    month: \"Oct\",\n    value: 12,\n  },\n  {\n    month: \"Nov\",\n    value: 12,\n  },\n  {\n    month: \"Dec\",\n    value: 15,\n  },\n];\n", "import { type ChartConfiguration } from \"chart.js\";\n\nimport { Chart } from \"@/charts/chartjs\";\nimport { LINE_CHART_DEFAULT_COLOR } from \"@/utils/constants\";\nimport { data } from \"@/utils/static-data\";\nimport { assertValue, hexToRgb, parseFloatFallback } from \"@/utils/util\";\n\nconst initChart = () => {\n  const canvasElement = assertValue(\n    document.querySelector<HTMLCanvasElement>(\"#line-chart\"),\n    \"Canvas element(#line-chart) was not found!\"\n  );\n\n  const computedStyles = window.getComputedStyle(canvasElement);\n\n  const { fontFamily, fontWeight, fontSize } = computedStyles;\n\n  const colorLine =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--chart-line\") ||\n    LINE_CHART_DEFAULT_COLOR;\n  const colorBorder =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--chart-border\") ||\n    LINE_CHART_DEFAULT_COLOR;\n  const colorBorderMiddle =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--chart-border-middle\") ||\n    LINE_CHART_DEFAULT_COLOR;\n  const colorText =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--chart-text\") ||\n    LINE_CHART_DEFAULT_COLOR;\n  const colorTextSecondary =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--chart-text-secondary\") ||\n    LINE_CHART_DEFAULT_COLOR;\n\n  const chartParent = assertValue(\n    canvasElement.closest<HTMLElement>(\"[data-chart-parent]\"),\n    \"Canvas parent element([data-chart-parent]) was not found!\"\n  );\n  const animationDuration = parseFloatFallback(chartParent?.dataset.animationDuration, 1) * 1000;\n  const animationDelay = parseFloatFallback(chartParent?.dataset.animationDelay, 0) * 1000;\n  const viewportThreshold = parseFloatFallback(chartParent?.dataset.viewportThreshold, 0.8);\n  const viewportMargin = parseFloatFallback(chartParent?.dataset.viewportMargin, 0);\n\n  const stepSize = 4;\n  const values = data.map((item) => item.value);\n  const months = data.map((item) => item.month);\n\n  const maxValue = values.reduce((acc, curr) => (curr > acc ? curr : acc), 0);\n  const numberOfLines = Math.ceil(maxValue / stepSize) + 1;\n\n  const config: ChartConfiguration<\"line\", number[], string> = {\n    type: \"line\",\n    data: {\n      labels: months,\n      datasets: [\n        {\n          data: values,\n          borderWidth: 3,\n          borderColor: colorLine,\n          pointStyle: \"circle\",\n          pointRadius: 3,\n          fill: true,\n          backgroundColor: (ctx) => {\n            const gradient = ctx.chart.ctx.createLinearGradient(0, 0, 0, ctx.chart.height);\n            const colorRgb = hexToRgb(colorLine);\n            const startColor =\n              colorRgb !== null\n                ? `rgb(${colorRgb.r}, ${colorRgb.g}, ${colorRgb.b}, 0.2)`\n                : `rgba(0, 0, 0, 0.1)`;\n            const endColor =\n              colorRgb !== null\n                ? `rgb(${colorRgb.r}, ${colorRgb.g}, ${colorRgb.b}, 0)`\n                : `rgba(0, 0, 0, 0)`;\n            gradient.addColorStop(0, startColor);\n            gradient.addColorStop(1, endColor);\n            return gradient;\n          },\n          pointBackgroundColor: colorLine,\n        },\n      ],\n    },\n\n    options: {\n      animation: {\n        duration: animationDuration,\n      },\n      maintainAspectRatio: false,\n      scales: {\n        x: {\n          border: { display: false },\n          grid: {\n            display: false,\n          },\n          offset: true,\n          ticks: { color: colorText },\n        },\n        y: {\n          beginAtZero: true,\n          grid: {\n            lineWidth: (ctx) => {\n              if (ctx.index === Math.floor(numberOfLines / 2)) return 2;\n              return 1;\n            },\n            color: (ctx) => {\n              if (ctx.index === Math.floor(numberOfLines / 2)) return colorBorderMiddle;\n              return colorBorder;\n            },\n            drawTicks: false,\n          },\n          ticks: {\n            stepSize,\n            padding: 10,\n            color: colorTextSecondary,\n            callback: (ctx) => {\n              if (ctx.toString() === \"0\") return \"0\";\n              return ctx.toString() + \"k\";\n            },\n          },\n          border: {\n            display: false,\n          },\n        },\n      },\n      plugins: {\n        legend: { display: false },\n        tooltip: {\n          callbacks: {\n            label: (data) => {\n              const text = `${\n                (Number.parseFloat(String(data.raw)) * 1000).toLocaleString() || \"N/A\"\n              }`;\n              return text.length >= 10 ? text : text.padEnd(10);\n            },\n          },\n          padding: 9,\n          titleMarginBottom: 8,\n          titleAlign: \"left\",\n          footerMarginTop: 0,\n          displayColors: false,\n        },\n      },\n    },\n  };\n\n  const interSectionObserver = new IntersectionObserver(\n    (entries) => {\n      for (const entry of entries) {\n        if (!entry.isIntersecting) return;\n\n        setTimeout(() => {\n          Chart.defaults.font.family = fontFamily;\n          Chart.defaults.font.size = Number.parseFloat(fontSize.replace(\"px\", \"\"));\n          Chart.defaults.font.weight = Number.parseFloat(fontWeight);\n\n          let graph = new Chart(canvasElement, config);\n\n          document.fonts.ready.then(() => {\n            graph.destroy();\n            graph = new Chart(canvasElement, config);\n          });\n        }, animationDelay);\n\n        interSectionObserver.unobserve(chartParent);\n      }\n    },\n    {\n      root: null,\n      threshold: viewportThreshold,\n      rootMargin: `${viewportMargin}px`,\n    }\n  );\n\n  interSectionObserver.observe(chartParent);\n};\n\ninitChart();\n"],
  "mappings": ";;;;;;;;;;;AAAO,IAAM,2BAA2B;;;ACiBjC,IAAM,OAA2C;AAAA,EACtD;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,OAAO;AAAA,EACT;AACF;;;AC3DA,IAAM,YAAY,MAAM;AACtB,QAAM,gBAAgB;AAAA,IACpB,SAAS,cAAiC,aAAa;AAAA,IACvD;AAAA,EACF;AAEA,QAAM,iBAAiB,OAAO,iBAAiB,aAAa;AAE5D,QAAM,EAAE,YAAY,YAAY,SAAS,IAAI;AAE7C,QAAM,YACJ,OAAO,iBAAiB,SAAS,eAAe,EAAE,iBAAiB,cAAc,KACjF;AACF,QAAM,cACJ,OAAO,iBAAiB,SAAS,eAAe,EAAE,iBAAiB,gBAAgB,KACnF;AACF,QAAM,oBACJ,OAAO,iBAAiB,SAAS,eAAe,EAAE,iBAAiB,uBAAuB,KAC1F;AACF,QAAM,YACJ,OAAO,iBAAiB,SAAS,eAAe,EAAE,iBAAiB,cAAc,KACjF;AACF,QAAM,qBACJ,OAAO,iBAAiB,SAAS,eAAe,EAAE,iBAAiB,wBAAwB,KAC3F;AAEF,QAAM,cAAc;AAAA,IAClB,cAAc,QAAqB,qBAAqB;AAAA,IACxD;AAAA,EACF;AACA,QAAM,oBAAoB,mBAAmB,aAAa,QAAQ,mBAAmB,CAAC,IAAI;AAC1F,QAAM,iBAAiB,mBAAmB,aAAa,QAAQ,gBAAgB,CAAC,IAAI;AACpF,QAAM,oBAAoB,mBAAmB,aAAa,QAAQ,mBAAmB,GAAG;AACxF,QAAM,iBAAiB,mBAAmB,aAAa,QAAQ,gBAAgB,CAAC;AAEhF,QAAM,WAAW;AACjB,QAAM,SAAS,KAAK,IAAI,CAAC,SAAS,KAAK,KAAK;AAC5C,QAAM,SAAS,KAAK,IAAI,CAAC,SAAS,KAAK,KAAK;AAE5C,QAAM,WAAW,OAAO,OAAO,CAAC,KAAK,SAAU,OAAO,MAAM,OAAO,KAAM,CAAC;AAC1E,QAAM,gBAAgB,KAAK,KAAK,WAAW,QAAQ,IAAI;AAEvD,QAAM,SAAuD;AAAA,IAC3D,MAAM;AAAA,IACN,MAAM;AAAA,MACJ,QAAQ;AAAA,MACR,UAAU;AAAA,QACR;AAAA,UACE,MAAM;AAAA,UACN,aAAa;AAAA,UACb,aAAa;AAAA,UACb,YAAY;AAAA,UACZ,aAAa;AAAA,UACb,MAAM;AAAA,UACN,iBAAiB,CAAC,QAAQ;AACxB,kBAAM,WAAW,IAAI,MAAM,IAAI,qBAAqB,GAAG,GAAG,GAAG,IAAI,MAAM,MAAM;AAC7E,kBAAM,WAAW,SAAS,SAAS;AACnC,kBAAM,aACJ,aAAa,OACT,OAAO,SAAS,CAAC,KAAK,SAAS,CAAC,KAAK,SAAS,CAAC,WAC/C;AACN,kBAAM,WACJ,aAAa,OACT,OAAO,SAAS,CAAC,KAAK,SAAS,CAAC,KAAK,SAAS,CAAC,SAC/C;AACN,qBAAS,aAAa,GAAG,UAAU;AACnC,qBAAS,aAAa,GAAG,QAAQ;AACjC,mBAAO;AAAA,UACT;AAAA,UACA,sBAAsB;AAAA,QACxB;AAAA,MACF;AAAA,IACF;AAAA,IAEA,SAAS;AAAA,MACP,WAAW;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,MACA,qBAAqB;AAAA,MACrB,QAAQ;AAAA,QACN,GAAG;AAAA,UACD,QAAQ,EAAE,SAAS,MAAM;AAAA,UACzB,MAAM;AAAA,YACJ,SAAS;AAAA,UACX;AAAA,UACA,QAAQ;AAAA,UACR,OAAO,EAAE,OAAO,UAAU;AAAA,QAC5B;AAAA,QACA,GAAG;AAAA,UACD,aAAa;AAAA,UACb,MAAM;AAAA,YACJ,WAAW,CAAC,QAAQ;AAClB,kBAAI,IAAI,UAAU,KAAK,MAAM,gBAAgB,CAAC,EAAG,QAAO;AACxD,qBAAO;AAAA,YACT;AAAA,YACA,OAAO,CAAC,QAAQ;AACd,kBAAI,IAAI,UAAU,KAAK,MAAM,gBAAgB,CAAC,EAAG,QAAO;AACxD,qBAAO;AAAA,YACT;AAAA,YACA,WAAW;AAAA,UACb;AAAA,UACA,OAAO;AAAA,YACL;AAAA,YACA,SAAS;AAAA,YACT,OAAO;AAAA,YACP,UAAU,CAAC,QAAQ;AACjB,kBAAI,IAAI,SAAS,MAAM,IAAK,QAAO;AACnC,qBAAO,IAAI,SAAS,IAAI;AAAA,YAC1B;AAAA,UACF;AAAA,UACA,QAAQ;AAAA,YACN,SAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF;AAAA,MACA,SAAS;AAAA,QACP,QAAQ,EAAE,SAAS,MAAM;AAAA,QACzB,SAAS;AAAA,UACP,WAAW;AAAA,YACT,OAAO,CAACA,UAAS;AACf,oBAAM,OAAO,IACV,OAAO,WAAW,OAAOA,MAAK,GAAG,CAAC,IAAI,KAAM,eAAe,KAAK,KACnE;AACA,qBAAO,KAAK,UAAU,KAAK,OAAO,KAAK,OAAO,EAAE;AAAA,YAClD;AAAA,UACF;AAAA,UACA,SAAS;AAAA,UACT,mBAAmB;AAAA,UACnB,YAAY;AAAA,UACZ,iBAAiB;AAAA,UACjB,eAAe;AAAA,QACjB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,QAAM,uBAAuB,IAAI;AAAA,IAC/B,CAAC,YAAY;AACX,iBAAW,SAAS,SAAS;AAC3B,YAAI,CAAC,MAAM,eAAgB;AAE3B,mBAAW,MAAM;AACf,gBAAM,SAAS,KAAK,SAAS;AAC7B,gBAAM,SAAS,KAAK,OAAO,OAAO,WAAW,SAAS,QAAQ,MAAM,EAAE,CAAC;AACvE,gBAAM,SAAS,KAAK,SAAS,OAAO,WAAW,UAAU;AAEzD,cAAI,QAAQ,IAAI,MAAM,eAAe,MAAM;AAE3C,mBAAS,MAAM,MAAM,KAAK,MAAM;AAC9B,kBAAM,QAAQ;AACd,oBAAQ,IAAI,MAAM,eAAe,MAAM;AAAA,UACzC,CAAC;AAAA,QACH,GAAG,cAAc;AAEjB,6BAAqB,UAAU,WAAW;AAAA,MAC5C;AAAA,IACF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,WAAW;AAAA,MACX,YAAY,GAAG,cAAc;AAAA,IAC/B;AAAA,EACF;AAEA,uBAAqB,QAAQ,WAAW;AAC1C;AAEA,UAAU;",
  "names": ["data"]
}
