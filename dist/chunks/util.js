class a extends Error{constructor(r){super(r),this.name="AssertionError"}}const o=(e,r,s)=>{if(e==null||Number.isNaN(e)||s&&!s(e))throw new a(r);return e},u=(e,r,s)=>e!==void 0&&s&&!s(e)||e===void 0||Number.isNaN(e)?r:e,c=e=>{if(e.startsWith("#")&&(e=e.slice(1)),e.length!==3&&e.length!==6)return null;e.length===3&&(e=e.split("").map(t=>t+t).join(""));const r=parseInt(e,16),s=r>>16&255,n=r>>8&255,l=r&255;return{r:s,g:n,b:l}},i=(e,r)=>o((r||document).querySelector(e),`Element: ${e} was not found!`),m=(e,r)=>{const s=(r||document).querySelectorAll(e);if(s.length===0)throw new Error(`Element: ${e} was not found!`);return Array.from(s)},b=(e,r)=>{const s={};for(const n of Object.keys(r))s[n]=e.style.getPropertyValue(n),e.style.setProperty(n,r[n]||null);return{revert:()=>{Object.assign(e.style,s)}}},f=(e,r)=>{if(e===void 0)return r;const s=Number.parseFloat(e);return Number.isNaN(s)?r:s};export{m as a,o as b,u as f,i as g,c as h,f as p,b as s};
