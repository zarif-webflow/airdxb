var s=class extends Error{constructor(t){super(t),this.name="AssertionError"}},m=(e,t,n)=>{if(e==null||Number.isNaN(e)||n&&!n(e))throw new s(t);return e},u=(e,t,n)=>e!==void 0&&n&&!n(e)||e===void 0||Number.isNaN(e)?t:e;var i=e=>{if(e.startsWith("#")&&(e=e.slice(1)),e.length!==3&&e.length!==6)return null;e.length===3&&(e=e.split("").map(o=>o+o).join(""));let t=parseInt(e,16),n=t>>16&255,r=t>>8&255,l=t&255;return{r:n,g:r,b:l}},d=(e,t)=>m((t||document).querySelector(e),`Element: ${e} was not found!`),T=(e,t)=>{let n=(t||document).querySelectorAll(e);if(n.length===0)throw new Error(`Element: ${e} was not found!`);return Array.from(n)},c=(e,t)=>{let n={};for(let r of Object.keys(t))n[r]=e.style.getPropertyValue(r),e.style.setProperty(r,t[r]||null);return{revert:()=>{Object.assign(e.style,n)}}},f=(e,t)=>{if(e===void 0)return t;let n=Number.parseFloat(e);return Number.isNaN(n)?t:n};export{m as a,u as b,i as c,d,T as e,c as f,f as g};
