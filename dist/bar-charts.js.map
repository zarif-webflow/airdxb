{
  "version": 3,
  "sources": ["../src/charts/bar-chart.ts", "../src/features/bar-charts.ts"],
  "sourcesContent": ["import { Chart } from \"@/charts/chartjs\";\nimport { BarChartData } from \"@/types/bar-chart\";\nimport { assertValue, parseFloatFallback } from \"@/utils/util\";\nimport { ChartConfiguration, Scale, TooltipItem } from \"chart.js\";\n\nconst BAR_CHART_DEFAULT_COLOR = \"#000000\";\n\nexport const barChart = ({\n  canvasElement,\n  data,\n  xTickCallback,\n  yTickCallback,\n  tooltipLabelCallback,\n  onChartInit,\n}: {\n  canvasElement: HTMLCanvasElement;\n  data: BarChartData;\n  xTickCallback?: (this: Scale, ctx: string | number) => string;\n  yTickCallback?: (this: Scale, ctx: string | number) => string;\n  tooltipLabelCallback?: (data: TooltipItem<\"bar\">) => string;\n  onChartInit?: (chart: Chart<\"bar\", (number | [number, number] | null)[], unknown>) => void;\n}) => {\n  const computedStyles = window.getComputedStyle(canvasElement);\n\n  const { fontFamily, fontWeight, fontSize } = computedStyles;\n\n  const barFillColor =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--bar-fill\") ||\n    BAR_CHART_DEFAULT_COLOR;\n  const barGridColor =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--bar-grid\") ||\n    BAR_CHART_DEFAULT_COLOR;\n  const barBorderColor =\n    window.getComputedStyle(document.documentElement).getPropertyValue(\"--bar-border\") ||\n    BAR_CHART_DEFAULT_COLOR;\n  const barRadiusCssVar = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bar-radius\");\n\n  const barRadius =\n    barRadiusCssVar !== \"\" ? Number.parseFloat(barRadiusCssVar.replace(\"px\", \"\")) : 16;\n\n  const barParent = assertValue(\n    canvasElement.closest<HTMLElement>(\"[data-bar-parent]\"),\n    \"Canvas parent element([data-bar-parent]) was not found!\"\n  );\n  const animationDuration = parseFloatFallback(barParent?.dataset.animationDuration, 1) * 1000;\n  const animationDelay = parseFloatFallback(barParent?.dataset.animationDelay, 0) * 1000;\n  const viewportThreshold = parseFloatFallback(barParent?.dataset.viewportThreshold, 0.8);\n  const viewportMargin = parseFloatFallback(barParent?.dataset.viewportMargin, 0);\n\n  const config: ChartConfiguration<\"bar\", (number | [number, number] | null)[], unknown> = {\n    data: {\n      datasets: [\n        {\n          data: data.map((item) => item.value),\n          backgroundColor: barFillColor,\n          borderRadius: barRadius,\n        },\n      ],\n      labels: data.map((item) => item.label),\n    },\n    type: \"bar\",\n    options: {\n      //   borderColor: 'transparent',\n      indexAxis: \"y\",\n      responsive: true,\n      animation: {\n        duration: animationDuration,\n      },\n      maintainAspectRatio: false,\n      plugins: {\n        legend: { display: false },\n        tooltip: {\n          callbacks: {\n            ...(tooltipLabelCallback && { label: tooltipLabelCallback }),\n          },\n          padding: 9,\n          titleMarginBottom: 8,\n          titleAlign: \"left\",\n          footerMarginTop: 0,\n          displayColors: false,\n        },\n      },\n      scales: {\n        x: {\n          ticks: {\n            ...(xTickCallback && { callback: xTickCallback }),\n          },\n          grid: { color: barGridColor, tickWidth: 0 },\n          border: { width: 0, display: false },\n        },\n        y: {\n          ticks: {\n            ...(yTickCallback && { callback: yTickCallback }),\n          },\n          grid: {\n            tickWidth: 0,\n          },\n          border: { color: barBorderColor },\n        },\n      },\n    },\n  };\n\n  const interSectionObserver = new IntersectionObserver(\n    (entries) => {\n      for (const entry of entries) {\n        if (!entry.isIntersecting) return;\n\n        setTimeout(() => {\n          Chart.defaults.font.family = fontFamily;\n          Chart.defaults.font.size = Number.parseFloat(fontSize.replace(\"px\", \"\"));\n          Chart.defaults.font.weight = Number.parseFloat(fontWeight);\n\n          document.fonts.ready.then(() => {\n            const barChart = new Chart(canvasElement, config);\n            onChartInit?.(barChart);\n          });\n        }, animationDelay);\n\n        interSectionObserver.unobserve(barParent);\n      }\n    },\n    {\n      root: null,\n      threshold: viewportThreshold,\n      rootMargin: `${viewportMargin}px`,\n    }\n  );\n\n  interSectionObserver.observe(barParent);\n};\n", "import { barChart } from \"@/charts/bar-chart\";\nimport { type BarChartData } from \"@/types/bar-chart\";\nimport { assertValue } from \"@/utils/util\";\n\nconst getCmsBarValues = ({ type }: { type: \"value\" | \"volume\" }) => {\n  const selector = type === \"value\" ? \"[data-value-bar-parent]\" : \"[data-volume-bar-parent]\";\n\n  const barParent = assertValue(\n    document.querySelector<HTMLElement>(selector),\n    `${selector} was not found!`\n  );\n  const cmsItems = Array.from(barParent.querySelectorAll<HTMLElement>(\"[data-cms-item]\"));\n\n  if (cmsItems.length === 0) {\n    throw new Error(`${selector} [data-cms-item] were not found!`);\n  }\n\n  const data: BarChartData = [];\n\n  for (const cmsItem of cmsItems) {\n    const label = cmsItem.querySelector<HTMLElement>(\"[data-label]\")?.textContent;\n    const valueStr = cmsItem.querySelector<HTMLElement>(\"[data-value]\")?.textContent;\n    const unit = cmsItem.querySelector<HTMLElement>(\"[data-unit]\")?.textContent || undefined;\n\n    if (!label || !valueStr) continue;\n\n    const value = Number.parseFloat(valueStr);\n\n    if (Number.isNaN(value)) continue;\n\n    data.push({ label, value, unit });\n  }\n\n  barParent.remove();\n\n  return data;\n};\n\nconst initBarCharts = () => {\n  const valueBarData = getCmsBarValues({ type: \"value\" });\n  const volumeBarData = getCmsBarValues({ type: \"volume\" });\n\n  const valueBarUnit = valueBarData[0]?.unit;\n  // const volumeBarUnit = volumeBarData[0]?.unit;\n\n  const volumeBarElement = assertValue(\n    document.querySelector<HTMLCanvasElement>(\"[data-volume-barchart]\"),\n    \"Canvas element([data-volume-barchart]) was not found!\"\n  );\n  const valueBarElement = assertValue(\n    document.querySelector<HTMLCanvasElement>(\"[data-value-barchart]\"),\n    \"Canvas element([data-value-barchart]) was not found!\"\n  );\n\n  const barTabVolumeTrigger = document.querySelector<HTMLElement>('[data-bar-trigger=\"volume\"]');\n  const barTabValueTrigger = document.querySelector<HTMLElement>('[data-bar-trigger=\"value\"]');\n\n  if (!barTabVolumeTrigger) {\n    console.error(`[data-bar-trigger=\"volume\"] wasn't found!`);\n  }\n\n  if (!barTabValueTrigger) {\n    console.error(`[data-bar-trigger=\"value\"] wasn't found!`);\n  }\n\n  barChart({\n    canvasElement: volumeBarElement,\n    data: volumeBarData,\n    xTickCallback: (ctx) => {\n      if (ctx === 0) return \"0.0\";\n      if (typeof ctx === \"number\") {\n        return `${(ctx / 1000).toFixed(1)}K`;\n      }\n      return ctx.toString();\n    },\n    // tooltipLabelCallback: (data) => {\n    //   if (data.raw === 0) return '0.0';\n    //   if (typeof data.raw === 'number') {\n    //     return `${(data.raw / 1000).toFixed(1)}K`;\n    //   }\n    //   return data.toString();\n    // },\n    onChartInit: (chart) => {\n      barTabVolumeTrigger?.addEventListener(\"click\", () => {\n        if (barTabVolumeTrigger.classList.contains(\"w--current\")) return;\n\n        chart.reset();\n        chart.update();\n      });\n    },\n  });\n\n  barChart({\n    canvasElement: valueBarElement,\n    data: valueBarData,\n    xTickCallback: (ctx) => {\n      if (ctx === 0) return \"0.0\";\n      if (typeof ctx === \"number\") {\n        return `${ctx.toLocaleString()}${valueBarUnit}`;\n      }\n      return ctx.toString();\n    },\n    tooltipLabelCallback: (data) => {\n      if (data.raw === 0) return \"0.0\";\n      if (typeof data.raw === \"number\") {\n        return `${data.raw.toLocaleString()}${valueBarUnit}`;\n      }\n      return data.toString();\n    },\n    onChartInit: (chart) => {\n      barTabValueTrigger?.addEventListener(\"click\", () => {\n        if (barTabValueTrigger.classList.contains(\"w--current\")) return;\n\n        chart.reset();\n        chart.update();\n      });\n    },\n  });\n};\n\ninitBarCharts();\n"],
  "mappings": "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",
  "names": ["barChart"]
}
