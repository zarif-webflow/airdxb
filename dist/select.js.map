{
  "version": 3,
  "sources": ["../src/packages/selectron.ts", "../src/features/select.ts"],
  "sourcesContent": ["import { autoUpdate, computePosition, flip, offset, shift, size } from \"@floating-ui/dom\";\nimport { trackInteractOutside } from \"@zag-js/interact-outside\";\n\nimport { getAssertedHtmlElement, getAssertedHtmlElements, setStyle } from \"@/utils/util\";\n\nconst generatedUids: Set<string> = new Set();\n\nconst generateId = () => {\n  while (true) {\n    const uid = Math.random().toString(36).substring(2, 8);\n    if (generatedUids.has(uid)) continue;\n    return uid;\n  }\n};\n\nexport const setupSelectron = (rootElement: HTMLElement) => {\n  const fragment = document.createDocumentFragment();\n  const trigger = getAssertedHtmlElement(\"[data-st-trigger]\", rootElement);\n  const triggerValue = getAssertedHtmlElement(\"[data-st-value]\", trigger);\n  const content = getAssertedHtmlElement(\"[data-st-content]\", rootElement);\n  const viewport = getAssertedHtmlElement(\"[data-st-viewport]\", rootElement);\n\n  let isOpen: boolean = false;\n  let defaultOptionIndex: number | undefined = undefined;\n  let selectedOptionIndex: number | undefined = undefined;\n  let highlightedOptionIndex: number | undefined = undefined;\n\n  let keyboardNavigationCallback: ((e: KeyboardEvent) => void) | undefined = undefined;\n  let cleanupAutoUpdate: (() => void) | undefined = undefined;\n  let cleanupOutsideInteraction: (() => void) | undefined = undefined;\n\n  const elementIds: {\n    rootElement: string;\n    trigger: string;\n    content: string;\n    viewport: string;\n    id: string;\n  } = (() => {\n    const id = `st--${generateId()}`;\n    let rootId = rootElement.id;\n\n    if (rootId === \"\") {\n      rootId = id;\n      rootElement.id = rootId;\n    }\n\n    const elementIds = {\n      id,\n      content: `${id}--content`,\n      trigger: `${id}--trigger`,\n      viewport: `${id}--viewport`,\n      rootElement: rootId,\n    };\n\n    content.id = elementIds.content;\n    trigger.id = elementIds.trigger;\n    viewport.id = elementIds.viewport;\n\n    return elementIds;\n  })();\n\n  const optionItems = (() => {\n    let isDefaultSelected = false;\n    const optionItems: { element: HTMLElement; value: string }[] = [];\n\n    const optionElements = getAssertedHtmlElements(\"[data-st-option]\", rootElement);\n\n    for (let i = 0; i < optionElements.length; i++) {\n      const element = optionElements[i]!;\n\n      const value = element.getAttribute(\"data-value\") ?? element.textContent?.trim();\n\n      if (value === undefined)\n        throw new Error(\"Option element must have a value or a text content!\");\n\n      element.setAttribute(\"data-value\", value);\n      element.setAttribute(\"id\", `${elementIds.id}--option-${i}`);\n\n      const isDefault = element.hasAttribute(\"selected\") && !isDefaultSelected;\n\n      optionItems.push({ element, value });\n\n      if (isDefault) {\n        isDefaultSelected = true;\n        defaultOptionIndex = i;\n        triggerValue.textContent = element.textContent?.trim() || null;\n        triggerValue.setAttribute(\"data-selected\", \"\");\n      }\n    }\n\n    return optionItems;\n  })();\n\n  const nativeSelect: HTMLSelectElement = (() => {\n    const nativeSelect = document.createElement(\"select\");\n\n    const selectName = rootElement.getAttribute(\"data-name\");\n    if (selectName) nativeSelect.name = selectName;\n\n    const dataAria = rootElement.getAttribute(\"data-aria\");\n\n    if (dataAria === \"inert\" || !rootElement.hasAttribute(\"data-aria\"))\n      nativeSelect.setAttribute(\"inert\", \"\");\n\n    if (dataAria === \"hidden\") nativeSelect.setAttribute(\"aria-hidden\", \"true\");\n\n    nativeSelect.tabIndex = -1;\n\n    if (rootElement.hasAttribute(\"data-required\")) {\n      nativeSelect.required = true;\n    }\n\n    const optionsFragment = document.createDocumentFragment();\n\n    let wasDefaultSelected = false;\n\n    for (let i = 0; i < optionItems.length; i++) {\n      const { value: optionValue } = optionItems[i]!;\n      const optionElement = document.createElement(\"option\");\n\n      optionElement.value = optionValue;\n      optionElement.textContent = optionValue;\n\n      if (i === defaultOptionIndex && !wasDefaultSelected) {\n        optionElement.setAttribute(\"selected\", \"\");\n        wasDefaultSelected = true;\n      }\n\n      optionsFragment.appendChild(optionElement);\n    }\n\n    nativeSelect.appendChild(optionsFragment);\n\n    setStyle(rootElement, { position: \"relative\" });\n\n    setStyle(nativeSelect, {\n      width: \"0px\",\n      height: \"0px\",\n      padding: \"0px\",\n      margin: \"0px\",\n      overflow: \"hidden\",\n      position: \"absolute\",\n      bottom: \"0px\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      clip: \"rect(0px, 0px, 0px, 0px)\",\n      \"white-space\": \"nowrap\",\n      \"overflow-wrap\": \"normal\",\n    });\n\n    if (!wasDefaultSelected) nativeSelect.value = \"\";\n\n    rootElement.appendChild(nativeSelect);\n\n    return nativeSelect;\n  })();\n\n  const dehighlightOptions = () => {\n    if (highlightedOptionIndex !== undefined) {\n      const prevHighlightedOption = optionItems[highlightedOptionIndex]!;\n\n      prevHighlightedOption.element.classList.remove(\"focused\", \"hovered\");\n      prevHighlightedOption.element.removeAttribute(\"data-focused\");\n      prevHighlightedOption.element.removeAttribute(\"data-hovered\");\n      prevHighlightedOption.element.blur();\n    }\n\n    highlightedOptionIndex = undefined;\n    content.removeAttribute(\"aria-activedescendant\");\n  };\n\n  const highlightOption = (optionIndex: number, type: \"focus\" | \"hover\" = \"hover\") => {\n    const optionElement = optionItems[optionIndex]!.element;\n\n    dehighlightOptions();\n\n    if (type === \"focus\") {\n      optionElement.classList.add(\"focused\");\n      optionElement.setAttribute(\"data-focused\", \"true\");\n      optionElement.focus();\n    }\n\n    if (type === \"hover\") {\n      optionElement.classList.add(\"hovered\");\n      optionElement.setAttribute(\"data-hovered\", \"true\");\n    }\n\n    const optionId = optionElement.getAttribute(\"id\");\n\n    if (optionId !== null) content.setAttribute(\"aria-activedescendant\", optionId);\n\n    highlightedOptionIndex = optionIndex;\n  };\n\n  const removeSelection = () => {\n    for (const { value, element: optionElement } of optionItems) {\n      triggerValue.removeAttribute(\"data-selected\");\n\n      if (value === \"\") {\n        triggerValue.textContent = optionElement.textContent;\n        optionElement.dataset.selected = \"false\";\n        optionElement.ariaSelected = \"false\";\n        continue;\n      }\n\n      optionElement.dataset.selected = \"false\";\n      optionElement.ariaSelected = \"false\";\n      optionElement.classList.remove(\"selected\");\n    }\n    nativeSelect.value = \"\";\n  };\n\n  const setModalPosition = () => {\n    computePosition(trigger, content, {\n      placement: \"bottom-start\",\n      middleware: [\n        offset(),\n        flip(),\n        shift(),\n        size({\n          apply: ({ rects }) => {\n            setStyle(content, { \"min-width\": `${rects.reference.width}px` });\n          },\n        }),\n      ],\n    }).then(({ x, y }) => {\n      setStyle(content, { left: `${x}px`, top: `${y}px` });\n    });\n  };\n\n  const closeModal = () => {\n    if (!isOpen) return;\n\n    fragment.appendChild(content);\n    isOpen = false;\n    trigger.ariaExpanded = \"false\";\n\n    cleanupAutoUpdate?.();\n    cleanupOutsideInteraction?.();\n\n    if (keyboardNavigationCallback) {\n      document.removeEventListener(\"keydown\", keyboardNavigationCallback);\n    }\n  };\n\n  const openModal = () => {\n    if (isOpen) return;\n\n    document.body.appendChild(content);\n    isOpen = true;\n    trigger.ariaExpanded = \"true\";\n\n    if (selectedOptionIndex !== undefined) {\n      highlightOption(selectedOptionIndex);\n    }\n\n    setModalPosition();\n\n    cleanupAutoUpdate = autoUpdate(trigger, content, setModalPosition);\n    cleanupOutsideInteraction = trackInteractOutside(content, {\n      onPointerDownOutside: closeModal,\n      onInteractOutside: closeModal,\n      onFocusOutside: closeModal,\n      exclude: (target) => trigger.isSameNode(target) || trigger.contains(target),\n    });\n\n    keyboardNavigationCallback = (e: KeyboardEvent) => {\n      if (e.key === \"Enter\" || e.key === \" \") {\n        e.preventDefault();\n\n        if (highlightedOptionIndex === undefined) return;\n\n        selectOption(highlightedOptionIndex);\n        closeModal();\n      }\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n\n        highlightOption(\n          highlightedOptionIndex === undefined || highlightedOptionIndex >= optionItems.length - 1\n            ? 0\n            : highlightedOptionIndex + 1,\n          \"focus\"\n        );\n      }\n      if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        highlightOption(\n          highlightedOptionIndex === undefined || highlightedOptionIndex <= 0\n            ? optionItems.length - 1\n            : highlightedOptionIndex - 1,\n          \"focus\"\n        );\n      }\n\n      if (e.key === \"Escape\") {\n        e.preventDefault();\n        closeModal();\n      }\n    };\n\n    document.addEventListener(\"keydown\", keyboardNavigationCallback);\n  };\n\n  const selectOption = (optionIndex: number) => {\n    const optionElement = optionItems[optionIndex]!.element;\n\n    removeSelection();\n\n    selectedOptionIndex = optionIndex;\n    highlightOption(optionIndex, \"hover\");\n\n    const value = optionElement.getAttribute(\"data-value\");\n\n    if (value === null) {\n      throw new Error(\"Option element must have a value!\");\n    }\n\n    if (value) {\n      nativeSelect.value = value;\n      triggerValue.setAttribute(\"data-selected\", \"\");\n    } else {\n      nativeSelect.removeAttribute(\"value\");\n      triggerValue.removeAttribute(\"data-selected\");\n    }\n\n    triggerValue.textContent = optionElement.textContent?.trim() || null;\n\n    optionElement.ariaSelected = \"true\";\n    optionElement.dataset.selected = \"true\";\n    optionElement.classList.add(\"selected\");\n\n    closeModal();\n  };\n\n  const initialSetup = () => {\n    // Trigger\n    trigger.setAttribute(\"type\", \"button\");\n    if (trigger.tagName !== \"BUTTON\") trigger.role = \"button\";\n    trigger.ariaHasPopup = \"listbox\";\n    trigger.ariaExpanded = \"false\";\n    trigger.setAttribute(\"aria-controls\", elementIds.content);\n\n    trigger.addEventListener(\"click\", () => {\n      openModal();\n    });\n\n    // Listbox\n    fragment.append(content);\n    content.role = \"listbox\";\n    content.tabIndex = 0;\n    content.setAttribute(\"aria-labelledby\", elementIds.trigger);\n    content.ariaOrientation = \"vertical\";\n\n    if (rootElement.hasAttribute(\"data-required\")) {\n      content.ariaRequired = \"true\";\n    }\n\n    setStyle(content, {\n      position: \"absolute\",\n      \"min-width\": `var(--st-content-min-w)`,\n      left: `var(--st-content-left)`,\n      top: `var(--st-content-top)`,\n    });\n\n    // Viewport\n    viewport.role = \"presentation\";\n\n    // Options\n    for (let i = 0; i < optionItems.length; i++) {\n      const optionItem = optionItems[i]!;\n      optionItem.element.role = \"option\";\n      optionItem.element.tabIndex = -1;\n\n      optionItem.element.ariaSelected = i === defaultOptionIndex ? \"true\" : \"false\";\n      optionItem.element.dataset.selected = i === defaultOptionIndex ? \"true\" : \"false\";\n\n      const svgs = optionItem.element.querySelectorAll(\"svg\");\n\n      svgs.forEach((svg) => {\n        svg.ariaHidden = \"true\";\n      });\n\n      optionItem.element.addEventListener(\"click\", () => {\n        selectOption(i);\n      });\n\n      optionItem.element.addEventListener(\"mouseenter\", () => {\n        highlightOption(i);\n      });\n      optionItem.element.addEventListener(\"mouseleave\", () => {\n        dehighlightOptions();\n      });\n    }\n  };\n\n  initialSetup();\n};\n", "import { setupSelectron } from \"@/packages/selectron\";\nimport { getAssertedHtmlElement } from \"@/utils/util\";\n\nsetupSelectron(getAssertedHtmlElement(\"[data-st-root]\"));\n"],
  "mappings": "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",
  "names": ["elementIds", "optionItems", "nativeSelect"]
}
